<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash on ctownsen357@github.io</title>
    <link>http://ctownsen357.github.io/tags/bash/index.xml</link>
    <description>Recent content in Bash on ctownsen357@github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <atom:link href="http://ctownsen357.github.io/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Argument List Too Long</title>
      <link>http://ctownsen357.github.io/posts/argument-list-too-log/</link>
      <pubDate>Tue, 01 Nov 2016 15:47:38 -0400</pubDate>
      
      <guid>http://ctownsen357.github.io/posts/argument-list-too-log/</guid>
      <description>&lt;p&gt;You know it before you even try.  You try anyway.  Something like trying to bzip2  316,387 CSV files representing ~ 10TB of data.  You know it will be at least &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;10&lt;/sub&gt; the size and R can handle the bzip2 files directly so you call bzip2 and get the argument list too long error.&lt;/p&gt;

&lt;p&gt;Find and xargs to the rescue!  Also, lbzip2 because you really don&amp;rsquo;t want to wait on bzip2 any more than you have to.&lt;/p&gt;

find path_to_files/ -name &#34;*.csv&#34; | xargs -P 5 lbzip2


&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; you&amp;rsquo;ll want to balance the number of parallel lbzip2 instances (or whatever you are running) as indicated by -P 5 above, balance that with the fact that lbzip2 runs in parallel too.&lt;/p&gt;

&lt;p&gt;It still took a long time to compress 316,387 files but it went a whole lot faster with parallel instances of parallel bzip2 using the xargs -P flag.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>port forwarding</title>
      <link>http://ctownsen357.github.io/posts/port-forwarding/</link>
      <pubDate>Mon, 31 Oct 2016 21:11:01 -0400</pubDate>
      
      <guid>http://ctownsen357.github.io/posts/port-forwarding/</guid>
      <description>ssh -NL 3389:internal.network.ip.address:3389 user@public.ip.address

&lt;p&gt;In this example I&amp;rsquo;m forwarding an RDP connection to a machine on some internal network IP address through a public facing SSH server.  I&amp;rsquo;ve found this sort of tunelling through SSH to be invaluable and I&amp;rsquo;ve used it for everything from accessing Windows servers over RDP where the only external access was a key protected SSH server to forwarding http/https traffic to remote APIs for testing and debugging.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>